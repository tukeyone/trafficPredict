# -*- coding: utf-8 -*-
"""
Created on Tue Jun 19 11:02:56 2018

@author: wyw
"""

# select valid data of one detector which covers nearly 26mins
inputdata=NHNX39_1
# e.g. NHNX39_1 is an list of seven lists of the trafficInfo on one single day
# i means the date(0-6) , j means the time(0-4319)
data_day18=[]
data_day19=[]
data_day20=[]
for j in range(4320):
    a=inputdata[0][j]['volume']
    data_day18.append(a)
for j in range(4320):
    a=inputdata[1][j]['volume']
    data_day19.append(a)
for j in range(4320):
    a=inputdata[2][j]['volume']
    data_day20.append(a)
    
'''
@brief   : data aggregation 
@variable: a list of data(volume) taking 20s as a period
@return  : a list of data(volume) taking 1min as a period
@others  : This function is to be called in map() in order to process a bunch
            of datas
'''
def aggronemin(data):
    aggrdata=[]
    for n in range(0,4320,3):
        temp0=data[n]
        temp1=data[n+1]
        temp2=data[n+2]
        aggrdata.append((temp0+temp1+temp2)/3)
    return aggrdata
def aggrfivemin(oridata):
    aggrdata=[]
    data=aggronemin(oridata)
    for n in range(0,1440,5):
        temp0=data[n]
        temp1=data[n+1]
        temp2=data[n+2]
        temp3=data[n+3]
        temp4=data[n+4]
        aggrdata.append((temp0+temp1+temp2+temp3+temp4)/5)
    return aggrdata
aggrdata_day18=aggrfivemin(data_day18)
aggrdata_day19=aggrfivemin(data_day19)
aggrdata_day20=aggrfivemin(data_day20)
